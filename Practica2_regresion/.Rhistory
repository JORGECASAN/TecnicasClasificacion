ruta <- 'C:/Users/Usuario/Desktop/MASTER IN DATA SCIENCE/TECNICAS DE CLASIFICACION/PRÁCTICA 2/regresion/datos.xlsx'
datos <- read_xlsx(ruta)
datos <- read_xlsx(ruta)
library(readxl)
datos <- read_xlsx(ruta)
str(datos)
View(datos)
anyNA(datos)
colnames(datos)<- c('Hogar','Ayuda por familias','Renta neta percibida por los menores de 16 años','Vacaciones fuera de casa',
'Capacidad de afrontar imprevistos', 'Television en color', 'Ordenador','Llegar a fin de mes', 'Régimen de tenencia',
'Número de miembros del hogar','Renta disponible total del hogar en el año anterior al de la entrevista',
'Hogar en riesgo de pobreza', 'Región', 'Edad mayor', 'Horas de trabajo semanal', 'Mayores de 16','Sexo mayor','Act mayor')
datos
colnames(datos)<- c('Hogar','Ayuda por familias','Renta neta percibida por los menores de 16 años','Vacaciones fuera de casa',
'Capacidad de afrontar imprevistos', 'Television en color', 'Ordenador','Llegar a fin de mes', 'Régimen de tenencia',
'Número de miembros del hogar','Renta disponible total del hogar en el año anterior al de la entrevista',
'Hogar en riesgo de pobreza', 'Región', 'Edad mayor', 'Horas de trabajo semanal', 'Mayores de 16','Sexo mayor','Act mayor')
datos
datos$"Hogar en riesgo de pobreza"<-as.factor(datos$"Hogar en riesgo de pobreza")
train <- datos[1:400,]
test <- datos[401:477,]
View(datos)
train <- datos[1:286,]
test <- datos[287:477,]
model <- glm(Hogar en riesgo de pobreza ~.,family=binomial(link='logit'),datos=train)
model <- glm("Hogar en riesgo de pobreza" ~.,family=binomial(link='logit'),datos=train)
model <- glm("Hogar en riesgo de pobreza" ~.,family=binomial(link='logit'),datos= train)
install.packages("ktools")
library(ktools)
library(k tools)
install.packages("caTools")
library(catools)
library(caTools)
model <- glm("Hogar en riesgo de pobreza" ~.,family=binomial(link='logit'),datos= train)
model <- glm(datos$"Hogar en riesgo de pobreza" ~.,family=binomial(link='logit'),datos= train)
model <- glm(datos$"Hogar en riesgo de pobreza" ~,family=binomial(link='logit'),datos= train)
model <- glm(datos$"Hogar en riesgo de pobreza" ~.,family=binomial(link='logit'),datos= train)
colnames(datos)<- c('Hogar','Ayuda por familias','Renta neta percibida por los menores de 16 años','Vacaciones fuera de casa',
'Capacidad de afrontar imprevistos', 'Television en color', 'Ordenador','Llegar a fin de mes', 'Régimen de tenencia',
'Número de miembros del hogar','Renta disponible total del hogar en el año anterior al de la entrevista',
'Hogarpobreza', 'Región', 'Edad mayor', 'Horas de trabajo semanal', 'Mayores de 16','Sexo mayor','Act mayor')
datos
#Nuestra variable explicativa es "Hogar en riesgo de pobreza" y las converimos a factor
#Como está en variable categórica la convertimos a factor
datos$"Hogarpobreza"<-as.factor(datos$"Hogarpobreza")
train <- datos[1:286,]#Cogemos como trainning el 60% del total de las observaciones
test <- datos[287:477,] #Cogemos como test el 40% del total de las observaciones
library(caTools)
model <- glm(datos$"Hogarpobreza" ~.,family=binomial(link='logit'),datos= train)
colnames(datos) <- c('Hogar','AyudaFamilias','RentaMenos16','VacacionesOutdoor',
'CapacidadAfrontar', 'TVColor', 'Ordenador','LlegarFinMes', 'RegimenTenencia',
'Miembros','RentaTotalAnterior',
'HogarPobreza', 'Region', 'EdadMayor', 'HorasSemanales', 'Mayores16','SexoMayor','ActMayor')
View(datos)
#### Tratamiento de variables ######
datos$HogarPobreza <- as.factor(as.character(datos$HogarPobreza))
#### Modelo de Regresion Linar #####
str(datos)
size <- floor(nrow(datos) * 0.6)
set.seed(123)
train_ind <- sample(seq_len(nrow(datos)), size = size) #Trabajaremos con el 60% del total de las observaciones para el trainning
training.set <- datos[train_ind, ]
test.set <- datos[-train_ind, ]#Trabajaremos con el 40% del total de las observaciones para hacer el test
#HogarPobreza es la variable explicativa para poder realizar el GLM
modelo01 <- glm(HogarPobreza ~ ., family = 'binomial'(link = 'logit'), data = training.set)
summary(modelo01)
training.data.raw <- read.csv('C:/Users/Usuario/Desktop/MASTER IN DATA SCIENCE/TÉCNICAS DE CLASIFICACIÓN/titanic.csv',header=T,na.strings=c(""))
sapply(training.data.raw,function(x) sum(is.na(x)))
training.data.raw <- read.csv('C:/Users/Usuario/Desktop/MASTER IN DATA SCIENCE/TÉCNICAS DE CLASIFICACIÓN/titanic.csv',header=T,na.strings=c(""))
training.data.raw <- read.csv('C:/Users/Usuario/Desktop/MASTER IN DATA SCIENCE/TÉCNICAS DE CLASIFICACIÓN/titanic.csv',header=T,na.strings=c(""))
datA<- read.csv('C:/Users/Usuario/Desktop/MASTER IN DATA SCIENCE/TÉCNICAS DE CLASIFICACIÓN/titanic.csv', header=TRUE)
data <- read.csv('C:/Users/Usuario/Desktop/MASTER IN DATA SCIENCE/TÉCNICAS DE CLASIFICACIÓN/titanic.csv', header=TRUE)
training.data.raw <- read.csv('C:/Users/Usuario/Desktop/MASTER IN DATA SCIENCE/TÉCNICAS DE CLASIFICACIÓN/titanic.csv',header=T,na.strings=c(""))
data <- read.csv('C:/Users/Usuario/Desktop/MASTER IN DATA SCIENCE/TECNICAS DE CLASIFICACION/titanic.csv', header=TRUE)
training.data.raw <- read.csv('C:/Users/Usuario/Desktop/MASTER IN DATA SCIENCE/TÉCNICAS DE CLASIFICACIÓN/titanic.csv',header=T,na.strings=c(""))
training.data.raw <- read.csv('C:/Users/Usuario/Desktop/MASTER IN DATA SCIENCE/TECNICAS DE CLASIFICACION/titanic.csv',header=T,na.strings=c(""))
sapply(training.data.raw,function(x) sum(is.na(x)))
sapply(training.data.raw, function(x) length(unique(x)))
View(data)
View(data)
data <- subset(training.data.raw,select=c(2,3,5,6,7,8,10,12))
data$Age[is.na(data$Age)] <- mean(data$Age,na.rm=T)
is.factor(data$Sex)
is.factor(data$Embarked)
contrasts(data$Sex)
contrasts(data$Embarked)
data <- data[!is.na(data$Embarked),]
rownames(data) <- NULL
train <- data[1:800,]
test <- data[801:889,]
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model, test="Chisq")
install.packages("pscl")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
logit.perf <- table(test$Survived, fitted.results, dnn=c("Actual", "Predicted"))
logit.perf
misClasificError <- mean(fitted.results != test$Survived)
print(paste('Accuracy',1-misClasificError))
ruta <- 'C:/Users/Usuario/Desktop/MASTER IN DATA SCIENCE/TECNICAS DE CLASIFICACION/PRÁCTICA 2/regresion/datos.xlsx'
library(readxl)
datos <- read_xlsx(ruta) #Tenemos 477 observaciones y 18 variables
str(datos)
colnames(datos) <- c('Hogar','AyudaFamilias','RentaMenos16','VacacionesOutdoor',
'CapacidadAfrontar', 'TVColor', 'Ordenador','LlegarFinMes', 'RegimenTenencia',
'Miembros','RentaTotalAnterior',
'HogarPobreza', 'Region', 'EdadMayor', 'HorasSemanales', 'Mayores16','SexoMayor','ActMayor')
View(datos)
#Quitamos la columna de Renta pues incurririamos en un problema circular como usted bien ha explicado
#COLUMNA 1= HOGAR
#COLUMNA 6= TV COLOR
#COLUMNA 7= ORDENADOR
#COLUMNA 11= RENTATOTALANTERIOR
#COLUMNA 13= REGION
#COLUMNA 17= SEXOMAYOR
datos <- datos[,c(-1, -6, -7, -11, -13, -17)]
datos$HogarPobreza <- as.factor(as.character(datos$HogarPobreza))
datos$VacacionesOutdoor <- as.factor(datos$VacacionesOutdoor)
datos$CapacidadAfrontar <- as.factor(datos$CapacidadAfrontar)
datos$TVColor <- as.factor(datos$TVColor)
datos$Ordenador <- as.factor(datos$Ordenador)
datos$VacacionesOutdoor <- as.factor(datos$VacacionesOutdoor)
datos$CapacidadAfrontar <- as.factor(datos$CapacidadAfrontar)
datos$LlegarFinMes <- as.factor(datos$LlegarFinMes)
datos$RegimenTenencia <- as.factor(datos$RegimenTenencia)
datos$Miembros <- as.numeric(datos$Miembros)
datos$ActMayor <- as.factor(datos$ActMayor)
str(datos)
datos <- as.data.frame(datos)
#### Modelo de Regresion Linar #####
str(datos)
size <- floor(nrow(datos) * 0.6)
set.seed(123)
train_ind <- sample(seq_len(nrow(datos)), size = size)
training.set <- datos[train_ind, ]
test.set <- datos[-train_ind, ]
modelo01 <- glm(HogarPobreza ~ ., family = 'binomial'(link = 'logit'), data = training.set)
summary(modelo01)
ruta <- 'C:/Users/Usuario/Desktop/MASTER IN DATA SCIENCE/TECNICAS DE CLASIFICACION/PRÁCTICA 2/regresion/datos.xlsx'
library(readxl)
datos <- read_xlsx(ruta) #Tenemos 477 observaciones y 18 variables
ruta <- 'C:/Users/Usuario/Desktop/MASTER IN DATA SCIENCE/TECNICAS DE CLASIFICACION/PRÁCTICA 2/regresion/datos.xlsx'
library(readxl)
datos <- read_xlsx(ruta) #Tenemos 477 observaciones y 18 variables
str(datos)
View(datos)
anyNA(datos) #No tenemos ningún NA en nuestras observaciones
colnames(datos) <- c('Hogar','AyudaFamilias','RentaMenos16','VacacionesOutdoor',
'CapacidadAfrontar', 'TVColor', 'Ordenador','LlegarFinMes', 'RegimenTenencia',
'Miembros','RentaTotalAnterior',
'HogarPobreza', 'Region', 'EdadMayor', 'HorasSemanales', 'Mayores16','SexoMayor','ActMayor')
View(datos)
#Quitamos la columna de Renta pues incurririamos en un problema circular como usted bien ha explicado
#COLUMNA 1= HOGAR
#COLUMNA 6= TV COLOR
#COLUMNA 7= ORDENADOR
#COLUMNA 11= RENTATOTALANTERIOR
#COLUMNA 13= REGION
#COLUMNA 17= SEXOMAYOR
datos <- datos[,c(-1, -6, -7, -11, -13, -17)]
datos$HogarPobreza <- as.factor(as.character(datos$HogarPobreza))
datos$VacacionesOutdoor <- as.factor(datos$VacacionesOutdoor)
datos$CapacidadAfrontar <- as.factor(datos$CapacidadAfrontar)
datos$LlegarFinMes <- as.factor(datos$LlegarFinMes)
datos$RegimenTenencia <- as.factor(datos$RegimenTenencia)
datos$Miembros <- as.numeric(datos$Miembros)
datos$ActMayor <- as.factor(datos$ActMayor)
str(datos) #De esta forma tendremos como formato tanto numéricos como factor con diferentes niveles
datos <- as.data.frame(datos) #Nos creamos el data frame
#### Modelo de Regresion Linar #####
str(datos)
size <- floor(nrow(datos) * 0.6)
set.seed(123)
train_ind <- sample(seq_len(nrow(datos)), size = size)
training.set <- datos[train_ind, ] #286 observaciones (60% de las observaciones)
test.set <- datos[-train_ind, ] #191 observaciones (40% de las observaciones)
modelo01 <- glm(HogarPobreza ~ ., family = 'binomial'(link = 'logit'), data = training.set)
summary(modelo01)
exp(coef(modelo01))
anova(modelo01, test = "Chisq")
install.packages("pscl")
install.packages("pscl")
library(pscl)
#Now the results are consistent, and no longer dependent
#on their level of aggregation (tabulation). I have notified the maintainer of the pscl package. Maybe he has some interest.
pR2(modelo01, 4)
modelo01$xlevels[["TVColor"]] <- union(modelo01$xlevels[["TVColor"]], levels(test.set$TVColor))
str(test.set)
str(training.set)
fitted.results <- predict(modelo01, newdata = subset(test.set,select=c(1,2,3,4,5,6,7,9,10,11,12)), type = 'response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
logit.perf <- table(test.set$HogarPobreza, fitted.results, dnn=c("Actual", "Predicted"))
logit.perf
misClasificError <- mean(fitted.results != test.set$HogarPobreza)
print(paste('Accuracy',1-misClasificError))
ruta <- 'datos.xlsx'
datos <- read_xlsx(ruta)
colnames(datos) <- c('Hogar','AyudaFamilias','RentaMenos16','VacacionesOutdoor',
'CapacidadAfrontar', 'TVColor', 'Ordenador','LlegarFinMes', 'RegimenTenencia',
'Miembros','RentaTotalAnterior',
'HogarPobreza', 'Region', 'EdadMayor', 'HorasSemanales', 'Mayores16','SexoMayor','ActMayor')
#Quitamos la columna de Renta pues incurririamos en un problema circular como usted bien ha explicado
datos <- datos[,c(-1, -6, -11, -13, -3, -17)]
datos$HogarPobreza <- as.factor(as.character(datos$HogarPobreza))
datos$VacacionesOutdoor <- as.factor(datos$VacacionesOutdoor)
datos$CapacidadAfrontar <- as.factor(datos$CapacidadAfrontar)
datos$TVColor <- as.factor(datos$TVColor)
datos$Ordenador <- as.factor(datos$Ordenador)
datos$LlegarFinMes <- as.factor(datos$LlegarFinMes)
datos$RegimenTenencia <- as.factor(datos$RegimenTenencia)
datos$Miembros <- as.numeric(datos$Miembros)
datos$SexoMayor <- as.factor(datos$SexoMayor)
datos$ActMayor <- as.factor(datos$ActMayor)
str(datos)
datos <- as.data.frame(datos)
#### Modelo de Regresion Linar #####
str(datos)
size <- floor(nrow(datos) * 0.6)
set.seed(123)
train_ind <- sample(seq_len(nrow(datos)), size = size)
training.set <- datos[train_ind, ]
test.set <- datos[-train_ind, ]
modelo01 <- glm(HogarPobreza ~ ., family = 'binomial'(link = 'logit'), data = training.set)
summary(modelo01)
exp(coef(modelo01))
anova(modelo01, test = "Chisq")
#Now the results are consistent, and no longer dependent
#on their level of aggregation (tabulation). I have notified the maintainer of the pscl package. Maybe he has some interest.
pR2(modelo01, 4)
str(test.set)
str(training.set)
fitted.results <- predict(modelo01, newdata = test.set, type = 'response')
fitted.results <- ifelse(fitted.results > 0.68, 1,0)
logit.perf <- table(test.set$HogarPobreza, fitted.results, dnn = c("Actual", "Predicted"))
logit.perf
misClasificError <- mean(fitted.results != test.set$HogarPobreza)
print(paste('Accuracy',1-misClasificError))
